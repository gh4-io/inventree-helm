{{- /*
Copyright VMware, Inc.
SPDX-License-Identifier: APACHE-2.0
*/}}

apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "inventree.names.master.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: server
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.master.updateStrategy }}
  strategy: {{- toYaml .Values.master.updateStrategy | nindent 4 }}
  {{- end }}
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.master.podLabels .Values.commonLabels ) "context" . ) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
      app.kubernetes.io/component: master
  template:
    metadata:
      annotations:
        {{- if .Values.master.podAnnotations }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.master.podAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: master
        app.kubernetes.io/part-of: inventree
    spec:
      {{- if and .Values.master.serviceAccount (not (empty .Values.master.serviceAccount.create)) }}
      serviceAccountName: {{ template "inventree.master.ServiceAccountName" . }}
      {{- end }}
      {{- include "inventree.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.master.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.master.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if or .Values.affinity .Values.master.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" (coalesce .Values.master.affinity .Values.affinity) "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.master.podAffinityPreset "component" "master" "customLabels" $podLabels "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.master.podAntiAffinityPreset "component" "master" "customLabels" $podLabels "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.master.nodeAffinityPreset.type "key" .Values.master.nodeAffinityPreset.key "values" .Values.master.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.master.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.master.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.master.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.master.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.master.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.master.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.master.priorityClassName }}
      priorityClassName: {{ .Values.master.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.master.schedulerName }}
      schedulerName: {{ .Values.master.schedulerName }}
      {{- end }}
      {{- if .Values.master.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.master.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.master.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.master.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.master.initContainers }}
      initContainers: {{- include "common.tplvalues.render" (dict "value" .Values.master.initContainers "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: master
          image: {{ template "inventree.master.image" . }}
          imagePullPolicy: {{ .Values.master.image.pullPolicy }}
          {{- if .Values.master.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.master.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.master.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.master.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.master.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.master.command "context" $) | nindent 12 }}
          {{- else }}
          command: []
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.master.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.master.args "context" $) | nindent 12 }}
          {{- else }}
          args: []
          {{- end }}
          ports:
            - name: http
              containerPort: {{ coalesce .Values.master.containerPorts.http .Values.master.containerPort }}
          env:
            - name: INVENTREE_ADMIN_EMAIL
              value: {{ .Values.master.adminEmail }}
            - name: INVENTREE_ADMIN_PASSWORD
              valueFrom: {{ include "inventree.admin.secret" . | nindent 16 }}
            - name: INVENTREE_ADMIN_USER
              value: {{ .Values.master.adminUser }}
            - name: INVENTREE_DEBUG
              value: "True"
            - name: INVENTREE_LOG_LEVEL
              value: "INFO"
            - name: INVENTREE_DB_ENGINE
              value: {{ include "inventree.db.engine" . }}
            - name: INVENTREE_DB_NAME
              value: {{ include "inventree.db.name" . | quote }}
            - name: INVENTREE_DB_HOST
              value: {{ include "inventree.db.host" . }}
            - name: INVENTREE_DB_PORT
              value: {{ include "inventree.db.port" . | quote }}
            - name: INVENTREE_DB_USER
              value: {{ include "inventree.db.user" . }}
            - name: INVENTREE_DB_PASSWORD
              valueFrom: {{ include "inventree.db.secret" . | nindent 16 }}
            - name: INVENTREE_GUNICORN_TIMEOUT
              value: "2"
            - name: INVENTREE_AUTO_UPDATE
              value: "False"
            {{- if .Values.redis.enabled }}
            - name: INVENTREE_CACHE_HOST
              value: {{ printf "%s-redis-master" (include "common.names.fullname" .) }}
            - name: INVENTREE_CACHE_PORT
              value: {{ coalesce .Values.redis.master.service.ports.redis .Values.redis.master.service.port | quote }}
            {{- end }}
            {{- if .Values.master.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.master.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.master.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.master.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.master.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.master.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if .Values.master.resources }}
          resources: {{- toYaml .Values.master.resources | nindent 12 }}
          {{- end }}
          {{- if not .Values.diagnosticMode.enabled }}
          {{- if .Values.master.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.master.customStartupProbe "context" $) | nindent 12 }}
          {{- else if .Values.master.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.master.startupProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: {{ .Values.master.baseUrl | trimSuffix "/" }}
              port: http
          {{- end }}
          {{- if .Values.master.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.master.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.master.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.master.livenessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: {{ .Values.master.baseUrl | trimSuffix "/" }}
              port: http
          {{- end }}
          {{- if .Values.master.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.master.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.master.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.master.readinessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: {{ .Values.master.baseUrl | trimSuffix "/" }}
              port: http
          {{- end }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /home/inventree/data
          {{- if .Values.master.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.master.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
        {{- if .Values.master.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.master.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "common.names.fullname" . }}-data
        {{- if .Values.master.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.master.extraVolumes "context" $) | nindent 8 }}
        {{- end }}