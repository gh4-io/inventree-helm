                                                                                                                                                                  
                                                                                                                                                                  
IIIIIIIIII                                                                     TTTTTTTTTTTTTTTTTTTTTTT                                                            
I::::::::I                                                                     T:::::::::::::::::::::T                                                            
I::::::::I                                                                     T:::::::::::::::::::::T                                                            
II::::::II                                                                     T:::::TT:::::::TT:::::T                                                            
  I::::Innnn  nnnnnnnn vvvvvvv           vvvvvvv eeeeeeeeeeee    nnnn  nnnnnnnnTTTTTT  T:::::T  TTTTTTrrrrr   rrrrrrrrr       eeeeeeeeeeee        eeeeeeeeeeee    
  I::::In:::nn::::::::nnv:::::v         v:::::vee::::::::::::ee  n:::nn::::::::nn      T:::::T        r::::rrr:::::::::r    ee::::::::::::ee    ee::::::::::::ee  
  I::::In::::::::::::::nnv:::::v       v:::::ve::::::eeeee:::::een::::::::::::::nn     T:::::T        r:::::::::::::::::r  e::::::eeeee:::::ee e::::::eeeee:::::ee
  I::::Inn:::::::::::::::nv:::::v     v:::::ve::::::e     e:::::enn:::::::::::::::n    T:::::T        rr::::::rrrrr::::::re::::::e     e:::::ee::::::e     e:::::e
  I::::I  n:::::nnnn:::::n v:::::v   v:::::v e:::::::eeeee::::::e  n:::::nnnn:::::n    T:::::T         r:::::r     r:::::re:::::::eeeee::::::ee:::::::eeeee::::::e
  I::::I  n::::n    n::::n  v:::::v v:::::v  e:::::::::::::::::e   n::::n    n::::n    T:::::T         r:::::r     rrrrrrre:::::::::::::::::e e:::::::::::::::::e 
  I::::I  n::::n    n::::n   v:::::v:::::v   e::::::eeeeeeeeeee    n::::n    n::::n    T:::::T         r:::::r            e::::::eeeeeeeeeee  e::::::eeeeeeeeeee  
  I::::I  n::::n    n::::n    v:::::::::v    e:::::::e             n::::n    n::::n    T:::::T         r:::::r            e:::::::e           e:::::::e           
II::::::IIn::::n    n::::n     v:::::::v     e::::::::e            n::::n    n::::n  TT:::::::TT       r:::::r            e::::::::e          e::::::::e          
I::::::::In::::n    n::::n      v:::::v       e::::::::eeeeeeee    n::::n    n::::n  T:::::::::T       r:::::r             e::::::::eeeeeeee   e::::::::eeeeeeee  
I::::::::In::::n    n::::n       v:::v         ee:::::::::::::e    n::::n    n::::n  T:::::::::T       r:::::r              ee:::::::::::::e    ee:::::::::::::e  
IIIIIIIIIInnnnnn    nnnnnn        vvv            eeeeeeeeeeeeee    nnnnnn    nnnnnn  TTTTTTTTTTT       rrrrrrr                eeeeeeeeeeeeee      eeeeeeeeeeeeee  
                                                                                                                                                                  
                                                                                                                                                                  
                                                                                                                                                                  

CHART NAME: {{ .Chart.Name }}
CHART VERSION: {{ .Chart.Version }}
APP VERSION: {{ .Chart.AppVersion }}

** Please be patient while the chart is being deployed **



{{- if .Values.proxy.ingress.enabled }}

1. Get the inventree URL indicated on the Ingress Rule and associate it to your cluster external IP:

   export CLUSTER_IP=$(minikube ip) # On Minikube. Use: `kubectl cluster-info` on others K8s clusters
   export HOSTNAME=$(kubectl get ingress --namespace {{ .Release.Namespace }} {{ template "common.names.fullname" . }} -o jsonpath='{.spec.rules[0].host}')
   echo "inventree URL: http{{ if .Values.proxy.ingress.tls }}s{{ end }}://$HOSTNAME/"
   echo "$CLUSTER_IP  $HOSTNAME" | sudo tee -a /etc/hosts

{{- else }}

1. Get the inventree URL by running:

{{- $port := coalesce .Values.proxy.service.ports.http .Values.proxy.service.port | toString }}
{{- if eq .Values.proxy.service.type "NodePort" }}

  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "common.names.fullname" . }}-proxy-public)
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo "inventree URL: http://$NODE_IP:$NODE_PORT/"

{{- else if eq .Values.proxy.service.type "LoadBalancer" }}

** Please ensure an external IP is associated to the {{ template "common.names.fullname" . }}-proxy service before proceeding **
** Watch the status using: kubectl get svc --namespace {{ .Release.Namespace }} -w {{ template "common.names.fullname" . }}-proxy **

  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "common.names.fullname" . }}-proxy --template "{{ "{{ range (index .status.loadBalancer.ingress 0) }}{{ . }}{{ end }}" }}")
  echo "inventree URL: http://$SERVICE_IP{{- if ne $port "80" }}:{{ $port }}{{ end }}/"

{{- else if eq .Values.proxy.service.type "ClusterIP" }}

  echo "inventree URL: http://127.0.0.1:8080/"
  kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ template "common.names.fullname" . }}-proxy 8080:{{ $port }}

{{- end }}
{{- end }}

{{- if .Values.master.adminUser }}
2. Login with the following admin user below:

  echo Admin user: {{ .Values.master.adminUser }}
  echo Password: $(kubectl get secret --namespace {{ .Release.Namespace }} {{ template "common.names.fullname" . }}-master -o jsonpath="{.data['values\.yaml']}" | base64 -d | awk -F: '/INVENTREE_ADMIN_PASSWORD/ {gsub(/[ \t]+/, "", $2);print $2}')

{{- else }}
2. Create a admin user

Note: By default, an admin user is automatically generated with username admin, mail `admin@example.com` and a dynamic password that is saved to `/etc/inventree/admin_password`.

  To create an `admin` (superuser) account run the command below, and follow the prompts:
  
  kubectl exec -it {{ include "inventree.names.master.fullname" . }} --container master -- invoke invoke superuser


{{- end }}

{{- include "common.warnings.rollingTag" .Values.master.image }}
{{- include "common.warnings.rollingTag" .Values.proxy.image }}
{{- include "common.warnings.rollingTag" .Values.workers.image }}
{{- include "common.warnings.rollingTag" .Values.redis.image }}

