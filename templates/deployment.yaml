{{ $CONFIG := .Values.config.files.config | default "config.yaml"}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "inventree.fullname" . }}
  labels:
    {{- include "inventree.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "inventree.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "inventree.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "inventree.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ printf "%s-server" .Chart.Name }}
          args:
          - -c
          - INVENTREE_DEBUG=True
          - invoke update && invoke server -a ${INVENTREE_WEB_ADDR}:${INVENTREE_WEB_PORT}
          command:
          - /bin/bash
          securityContext:
            {{- toYaml .Values.securityContext | nindent 14 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.web.port | default 8000 }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 14 }}
          {{- if (include "inventree.persistance" .) }}
          volumeMounts:
          {{- if (include "inventree.persistance.configMap" .) }}
          - mountPath: {{ printf "%s/%s" (include "inventree.dir.data" .) $CONFIG }}
            name: config
            readOnly: false
            subPath: {{ .Values.config.files.config | default "config.yaml" }}
          - name: data
            mountPath: "/home/inventree/data"
          workingDir: {{ include "inventree.dir.home" . }}
          {{- end }}
          {{- end }}
      {{- if .Values.workers.enabled | default false }}
        - name: {{ printf "%s-worker" .Chart.Name }}
          args:
          - -c
          - invoke worker
          command:
          - /bin/bash
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 14 }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 14 }}
          {{- if (include "inventree.persistance" .) }}
          volumeMounts:
          {{- if (include "inventree.persistance.configMap" .) }}
          - mountPath: {{ printf "%s/%s" (include "inventree.dir.data" .) (.Values.config.files.config | default "config.yaml") }}
            name: config
            readOnly: true
            subPath: {{ .Values.config.files.config | default "config.yaml" }}
          workingDir: {{ include "inventree.dir.home" . }}
          {{- end }}
          {{- end }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ printf "%s-pvc" (include "inventree.fullname" .) }}
        - name: config
          secret:
            secretName: {{ include "inventree.configMap.name" . }}
            optional: false
            defaultMode: 420
  strategy:
    type: Recreate